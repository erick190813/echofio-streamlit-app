# echofio_app.py

import streamlit as st
import database
import os # Importar para verificar a exist√™ncia do arquivo de logo

# --- Configura√ß√£o da p√°gina (DEVE SER O PRIMEIRO COMANDO STREAMLIT) ---
st.set_page_config(page_title="EchoFio", layout="wide", initial_sidebar_state="expanded")

# --- Inicializar o banco de dados ---
try:
    database.inicializar_db()
    # Tamb√©m garantir que a tabela de usu√°rios seja criada (se n√£o estiver em inicializar_db)
    database.criar_tabela_usuarios()
    if 'nomes_materiais' not in st.session_state:
        nomes_db = database.buscar_nomes_materiais()
        st.session_state.nomes_materiais = list(nomes_db) if nomes_db else []
    # Inicializar estado de login
    if 'logged_in' not in st.session_state:
        st.session_state.logged_in = False
    if 'username' not in st.session_state:
         st.session_state.username = ""

except Exception as e:
    st.error(f"Erro CR√çTICO ao inicializar o banco de dados: {e}")
    st.warning(
        "A aplica√ß√£o pode n√£o funcionar corretamente. Verifique o arquivo 'database.py' e se o arquivo 'materiais.db' foi recriado.")
    st.session_state.nomes_materiais = ["PET (Erro DB)", "PLA (Erro DB)", "ABS (Erro DB)"]
    st.session_state.logged_in = False # Garantir que n√£o est√° logado se houver erro no DB

# --- Fun√ß√£o para deslogar ---
def logout():
    st.session_state.logged_in = False
    st.session_state.username = ""
    st.success("Voc√™ foi desconectado.")
    st.rerun() # Recarrega a p√°gina para mostrar a tela de login

# --- Layout do cabe√ßalho com logo e t√≠tulo ---
col_logo, col_title = st.columns([1, 4])

with col_logo:
    LOGO_PATH = "31121abd-f8d6-4d98-b07a-9de3735ea257.png"
    if os.path.exists(LOGO_PATH):
        st.image(LOGO_PATH, width=100) # Ajuste o width conforme necess√°rio
    else:
        st.warning(f"Arquivo de logo n√£o encontrado: {LOGO_PATH}")
        st.header("‚ôªÔ∏è") # Fallback icon

with col_title:
    st.title("EchoFio")
    st.markdown("### Inova√ß√£o Sustent√°vel em Filamentos 3D")

st.markdown("---")

# --- Conte√∫do principal baseado no estado de login ---
if st.session_state.logged_in:
    # Se logado, Streamlit exibir√° as p√°ginas da pasta 'pages'
    # N√£o precisamos colocar o conte√∫do das p√°ginas aqui, Streamlit faz isso automaticamente
    st.success(f"Bem-vindo, {st.session_state.username}! Use o menu ao lado para navegar.")

    # Adicionar bot√£o de logout na sidebar quando logado
    with st.sidebar:
        st.markdown("---") # Separador visual antes do logout
        st.button("üîí Logout", on_click=logout)

else:
    # Se n√£o logado, mostre op√ß√µes de login/cadastro ou redirecione para a p√°gina de login
    st.info("Por favor, fa√ßa login ou cadastre-se para acessar os recursos.")

    # Voc√™ pode adicionar links ou bot√µes para as p√°ginas de Login e Registro aqui
    # ou confiar que o Streamlit listar√° Login.py e Registro.py na sidebar
    # se eles estiverem na pasta raiz e as p√°ginas estiverem na subpasta 'pages'.
    # Streamlit lista arquivos .py na raiz e na pasta 'pages'.
    # A ordem √© alfab√©tica, a menos que voc√™ use n√∫meros prefixados (ex: 01_Login.py).
    # Para garantir que Login/Registro apare√ßam antes das p√°ginas principais,
    # vamos confiar que eles estar√£o na raiz e as p√°ginas principais na subpasta 'pages'.
    # O Streamlit listar√° todos eles, mas o fluxo de l√≥gica no main_app.py
    # garante que o conte√∫do das p√°ginas s√≥ apare√ßa se logado.

    # Pode-se adicionar um pequeno texto incentivando o cadastro/login:
    st.markdown("""
    Para come√ßar, fa√ßa login ou crie uma nova conta utilizando as op√ß√µes na barra lateral.
    """)

# --- Sidebar (Ser√° preenchida automaticamente pelo Streamlit com base nos arquivos) ---
# O conte√∫do manual da sidebar que estava aqui na vers√£o anterior (Navega√ß√£o)
# ser√° sobrescrito pela navega√ß√£o autom√°tica do Streamlit baseada nos arquivos na pasta 'pages'.
# Mantenha apenas a se√ß√£o "Sobre o EchoFio AI" e o rodap√© de vers√£o.

with st.sidebar:
    # Adicionar o logo na sidebar tamb√©m (opcional, mas comum)
    # if os.path.exists(LOGO_PATH):
    #     st.image(LOGO_PATH, width=80) # Ajuste o width
    # st.markdown("---") # Separador

    st.header("üå± Sobre EchoFio AI")
    st.info(
        "EchoFio AI √© um prot√≥tipo que integra a identifica√ß√£o de pl√°sticos "
        "recicl√°veis por imagem com a simula√ß√£o da produ√ß√£o de filamentos para impress√£o 3D, "
        "promovendo a economia circular e a sustentabilidade."
    )
    st.markdown("---")
    # A navega√ß√£o (Identifica√ß√£o, Simula√ß√£o, BD) ser√° adicionada automaticamente aqui pelo Streamlit
    # quando os arquivos estiverem na pasta 'pages'.
    st.caption("EchoFio AI Prot√≥tipo v0.8.1") # Incrementar a vers√£o