# echofio_app.py - Vers√£o para Debug

import streamlit as st
import database
import os # Importar para verificar a exist√™ncia do arquivo de logo

# --- Configura√ß√£o da p√°gina (DEVE SER O PRIMEIRO COMANDO STREAMLIT) ---
# Define o t√≠tulo da aba do navegador, layout e estado inicial da sidebar.
# Use um t√≠tulo que represente o aplicativo como um todo.
st.set_page_config(page_title="Projeto ECHOFIO App", layout="wide", initial_sidebar_state="expanded")

# --- Inicializar o banco de dados e o usu√°rio administrador ---
try:
    # A fun√ß√£o inicializar_db() em database.py agora chama criar_tabela_usuarios(),
    # criar_tabela_materiais() E criar_usuario_admin_inicial() na ordem correta.
    print("[DEBUG APP] Chamando database.inicializar_db()") # Debug print no app principal
    database.inicializar_db()
    print("[DEBUG APP] database.inicializar_db() conclu√≠do.") # Debug print


    # Inicializa o estado da sess√£o para nomes de materiais, se ainda n√£o existirem.
    # Este √© o passo que popula a lista usada na p√°gina de Simula√ß√£o.
    if 'nomes_materiais' not in st.session_state:
        print("[DEBUG APP] 'nomes_materiais' n√£o est√° na sess√£o. Buscando nomes do DB...") # Debug
        nomes_db = database.buscar_nomes_materiais() # Chama a fun√ß√£o que tem debug prints internos
        st.session_state.nomes_materiais = list(nomes_db) if nomes_db else [] # Converte o resultado para lista
        print(f"[DEBUG APP] st.session_state.nomes_materiais definido como: {st.session_state.nomes_materiais}") # Debug

    # Inicializa estado de login
    if 'logged_in' not in st.session_state:
        st.session_state.logged_in = False
        print("[DEBUG APP] 'logged_in' n√£o est√° na sess√£o. Definido como False.") # Debug

    if 'username' not in st.session_state:
         st.session_state.username = ""
         print("[DEBUG APP] 'username' n√£o est√° na sess√£o. Definido como ''.") # Debug

    # Inicializa user_privileges na sess√£o.
    # Os privil√©gios reais s√≥ s√£o carregados ap√≥s o login bem-sucedido em Login.py.
    # Aqui apenas garantimos que a chave existe na sess√£o com valores padr√£o False.
    if 'user_privileges' not in st.session_state:
        st.session_state.user_privileges = {"can_edit_db": False, "is_admin": False}
        print("[DEBUG APP] 'user_privileges' n√£o est√° na sess√£o. Definido como padr√£o False/False.") # Debug


except Exception as e:
    # Este bloco captura erros durante a inicializa√ß√£o do DB que ocorrem DENTRO do try
    print(f"[DEBUG APP] ERRO CR√çTICO capturado durante inicializa√ß√£o do APP/DB: {e}") # Debug
    st.error(f"Erro CR√çTICO ao inicializar o banco de dados ou usu√°rio administrador: {e}")
    st.warning(
        "A aplica√ß√£o pode n√£o funcionar corretamente. Verifique o arquivo 'database.py' e se o arquivo 'materiais.db' foi criado/atualizado corretamente.")
    # Define estados de fallback para que o app n√£o quebre totalmente em caso de erro cr√≠tico no DB
    st.session_state.nomes_materiais = [] # Lista vazia em caso de erro no DB
    if 'logged_in' not in st.session_state:
        st.session_state.logged_in = False
    if 'username' not in st.session_state:
         st.session_state.username = ""
    if 'user_privileges' not in st.session_state:
        st.session_state.user_privileges = {"can_edit_db": False, "is_admin": False}

print("[DEBUG APP] Inicializa√ß√£o da sess√£o e DB conclu√≠da.") # Debug print final da inicializa√ß√£o


# --- Layout do cabe√ßalho (Consist√™ncia visual) ---
# Assume que o arquivo da logo est√° na raiz do seu projeto. Ajuste o caminho se necess√°rio.
LOGO_FILE_NAME = "31121abd-f8d6-4d98-b07a-9de3735ea257.png" # Nome do arquivo da sua logo
# O script principal est√° na raiz, ent√£o o caminho √© direto o nome do arquivo.
LOGO_PATH_ROOT = LOGO_FILE_NAME

col_logo, col_title = st.columns([1, 4])

with col_logo:
    # Verifica se o caminho da logo existe e exibe
    if os.path.exists(LOGO_PATH_ROOT):
        st.image(LOGO_PATH_ROOT, width=100) # Logo um pouco maior na p√°gina principal
    else:
        st.header("‚ôªÔ∏è") # √çcone de fallback se a logo n√£o for encontrada

with col_title:
    st.title("Bem-vindo ao Projeto ECHOFIO") # T√≠tulo Principal da Homepage
    st.markdown("### Inova√ß√£o Sustent√°vel em Impress√£o 3D") # Subt√≠tulo/Tagline

st.markdown("---") # Linha divis√≥ria

# --- Conte√∫do da Homepage (Mostrado quando N√ÉO logado - Mais Detalhado) ---
if not st.session_state.get('logged_in', False):
    st.subheader("Dando Uma Nova Vida ao Pl√°stico Descartado")

    st.write(
        """
        O **Projeto ECHOFIO** √© uma iniciativa dedicada a revolucionar a impress√£o 3D atrav√©s da sustentabilidade.
        Nossa miss√£o √© dar uma **nova vida** a res√≠duos pl√°sticos que seriam descartados,
        transformando-os em **filamentos de alta qualidade** para impressoras 3D.
        """
    )

    st.markdown("#### Nossa Proposta de Valor se Baseia em Pilares Fortes:")

    col1, col2 = st.columns(2)

    with col1:
        st.markdown("##### üå± Sustentabilidade e Economia Circular")
        st.write(
            """
            Acreditamos em um futuro onde o "lixo" n√£o existe, apenas recursos fora do lugar.
            O ECHOFIO implementa a **economia circular** na pr√°tica, desviando toneladas de res√≠duos pl√°sticos de aterros
            e oceanos, e reintegrando-os na cadeia produtiva como mat√©ria-prima para filamentos.
            Reduzimos significativamente o impacto ambiental associado √† produ√ß√£o de filamentos a partir de pl√°stico virgem.
            """
        )

        st.markdown("##### üí° Inova√ß√£o Tecnol√≥gica")
        st.write(
            """
            Nosso processo envolve etapas cuidadosas de coleta, triagem, limpeza, tritura√ß√£o e, crucialmente, a **extrus√£o**
            controlada para garantir a qualidade e uniformidade do filamento. Aplicamos **controle de qualidade rigoroso**
            para assegurar que o filamento ECHOFIO atenda aos padr√µes necess√°rios para uma impress√£o 3D confi√°vel e de sucesso.
            """
        )

    with col2:
        st.markdown("##### üí∞ Baixo Custo e Acessibilidade")
        st.write(
            """
            Ao utilizar res√≠duos como mat√©ria-prima, conseguimos reduzir consideravelmente os custos de produ√ß√£o
            em compara√ß√£o com filamentos tradicionais. Isso torna o filamento ECHOFIO uma **alternativa mais acess√≠vel**
            e economicamente vi√°vel para makers, empresas e institui√ß√µes que buscam reduzir gastos sem comprometer a qualidade
            ou o compromisso ambiental.
            """
        )

        st.markdown("##### üìö Educa√ß√£o e Conscientiza√ß√£o")
        st.write(
            """
            Vamos al√©m da produ√ß√£o. O ECHOFIO tamb√©m se dedica a **disseminar conhecimento** sobre a import√¢ncia da reciclagem,
            os princ√≠pios da economia circular e as possibilidades da manufatura aditiva sustent√°vel. Colaboramos com
            institui√ß√µes de ensino e parceiros para inspirar e capacitar a pr√≥xima gera√ß√£o de inovadores conscientes.
            """
        )

    st.markdown("---")

    st.subheader("Nosso Processo em Resumo:")
    st.write(
        """
        De forma simplificada, transformamos o res√≠duo atrav√©s das seguintes etapas:
        **Coleta & Triagem** ‚Üí **Limpeza & Tritura√ß√£o** ‚Üí **Extrus√£o & Filamenta√ß√£o** ‚Üí **Controle de Qualidade** ‚Üí **Prototipagem & Otimiza√ß√£o** ‚Üí **Distribui√ß√£o Sustent√°vel**.
        Cada passo √© otimizado para garantir a efici√™ncia do ciclo e a qualidade do filamento final.
        """
    )

    st.markdown("---")

    st.subheader("Quem Apoiamos e Quem Busca o ECHOFIO:")
    st.write(
        """
        Nosso projeto atende a diversos segmentos, todos unidos pelo interesse em inova√ß√£o, sustentabilidade e efici√™ncia:
        **Comunidade Maker**, **Empresas e Startups** que usam impress√£o 3D, **Setor Industrial**, **Institui√ß√µes Educacionais e de Pesquisa**,
        e **Organiza√ß√µes com Foco em Impacto Social e Ambiental**.
        Contamos com parceiros estrat√©gicos como o **SENAI Nova Lima** e a **AML EDITORA** para fortalecer nossa atua√ß√£o e alcance.
        """
    )

    st.markdown("---")


    st.subheader("Explore Nossas Ferramentas!")
    st.write(
        """
        Crie uma conta ou fa√ßa login para ter acesso total √†s nossas ferramentas,
        como a **Calculadora de Impacto e Economia** (quantifique os benef√≠cios da reciclagem)
        e o **M√≥dulo de Simula√ß√£o** (planeje sua produ√ß√£o de filamento com diferentes materiais).
        """
    )

    st.info("Para come√ßar, utilize as op√ß√µes 'Login' ou 'Registro' na barra lateral.")


else:
    # --- Conte√∫do Mostrado Quando Logado ---
    st.success(f"Bem-vindo(a), {st.session_state.username}! Voc√™ est√° logado.")
    st.write("Explore os m√≥dulos dispon√≠veis na barra lateral √† esquerda:")

    st.markdown("""
    - üìä **Calculadora de Impacto e Economia:** Calcule o impacto ambiental e a economia do ECHOFIO.
    - ‚öôÔ∏è **Simula√ß√£o:** Simule a produ√ß√£o de filamento com base em diferentes materiais.
    - üìö **Banco de Dados:** Consulte e (se permitido) gerencie as propriedades dos materiais reciclados.
    """)

st.markdown("---") # Linha divis√≥ria

# --- Sidebar (Conte√∫do fixo para todas as p√°ginas) ---
with st.sidebar:
    # Adicionar o logo na sidebar tamb√©m (opcional, mas comum)
    # Usa o mesmo tratamento de caminho da logo do cabe√ßalho principal (na raiz)
    if os.path.exists(LOGO_PATH_ROOT):
        st.image(LOGO_PATH_ROOT, width=80) # Logo menor na sidebar
    else:
        st.header("‚ôªÔ∏è") # √çcone de fallback


    st.markdown("---") # Separador visual

    st.header("üå± Sobre o Projeto ECHOFIO") # Nome do projeto atualizado
    st.info(
         "O **Projeto ECHOFIO** transforma res√≠duos pl√°sticos em filamentos "
         "sustent√°veis de alta qualidade para impress√£o 3D, promovendo a "
         "economia circular e reduzindo o impacto ambiental." # Descri√ß√£o atualizada, concisa e sem men√ß√£o a IA
    )
    st.markdown("---")
    st.write("Desenvolvido por Equipe ECHOFIO") # Cr√©ditos
    st.write("Vers√£o: 1.0") # Exemplo de vers√£o