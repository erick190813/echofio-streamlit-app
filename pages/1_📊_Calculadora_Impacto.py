# pages/1_üìä_Calculadora_Impacto.py

import streamlit as st
import os # Necess√°rio para verificar a exist√™ncia do arquivo de logo

# --- Configura√ß√£o da p√°gina (Estas configura√ß√µes devem estar principalmente no script principal como 'echofio_app.py') ---
# st.set_page_config(page_title="Calculadora", layout="wide") # Removido daqui para evitar conflitos se j√° definido no echofio_app.py

# --- Verifica se o usu√°rio est√° logado ---
# Assume que o estado de login est√° sendo gerenciado em st.session_state no seu script principal (echofio_app.py)
if not st.session_state.get('logged_in', False):
    st.warning("üîí Por favor, fa√ßa login para acessar este m√≥dulo.")
    st.stop() # Interrompe a execu√ß√£o desta p√°gina se n√£o estiver logado

# --- Layout do cabe√ßalho (Consist√™ncia visual) ---
# Assume que o arquivo da logo est√° na raiz do seu projeto. Ajuste o caminho se necess√°rio.
LOGO_FILE_NAME = "31121abd-f8d6-4d98-b07a-9de3735ea257.png" # Nome do arquivo da sua logo
# Tenta encontrar o caminho da logo relativo √† pasta 'pages' ou na raiz
LOGO_PATH_RELATIVE = os.path.join("..", LOGO_FILE_NAME) # Tenta ../logo.png
LOGO_PATH_ROOT = LOGO_FILE_NAME # Tenta logo.png (se executado da raiz)

col_logo, col_title = st.columns([1, 4])

with col_logo:
    # Verifica qual caminho da logo existe e exibe
    if os.path.exists(LOGO_PATH_RELATIVE):
        st.image(LOGO_PATH_RELATIVE, width=80)
    elif os.path.exists(LOGO_PATH_ROOT):
         st.image(LOGO_PATH_ROOT, width=80)
    else:
        st.header("‚ôªÔ∏è") # √çcone de fallback se a logo n√£o for encontrada

with col_title:
    st.title("Calculadora de Impacto e Economia") # Novo T√≠tulo da P√°gina
    st.markdown("### Quantifique os benef√≠cios ambientais e econ√¥micos do ECHOFIO") # Subt√≠tulo

st.markdown("---") # Linha divis√≥ria

# --- Se√ß√£o da Calculadora ---

st.subheader("Calcular Impacto e Economia Estimados")

st.write("Utilize a calculadora abaixo para estimar o impacto positivo e a economia gerada pelo processo e filamentos ECHOFIO.")

# --- Formul√°rio de Input do Usu√°rio ---
with st.form("calculadora_form"):
    st.write("Insira a quantidade de material:")

    quantidade_input = st.number_input(
        "Quantidade:",
        min_value=0.0,
        step=0.1,
        format="%.2f",
        help="Informe a quantidade de res√≠duo pl√°stico ou filamento ECHOFIO."
    )

    tipo_input = st.radio(
        "Tipo de Material:",
        ('kg de Res√≠duo Pl√°stico', 'kg de Filamento ECHOFIO Produzido'),
        horizontal=True,
        help="Selecione se a quantidade informada refere-se ao res√≠duo pl√°stico coletado/processado ou ao filamento ECHOFIO produzido/utilizado."
    )

    calcular_button = st.form_submit_button("Calcular Impacto e Economia")

# --- Valores de Refer√™ncia do Projeto (CONFIGURE AQUI!) ---
# Importante: Estes valores s√£o exemplos. Voc√™ DEVE substitu√≠-los pelos dados reais
# e pesquisados do Projeto ECHOFIO para garantir a precis√£o da calculadora.

TAXA_CONVERSAO_RESIDUO_FILAMENTO = 0.8 # Exemplo: 0.8 significa que 80% do peso do res√≠duo vira filamento. Ajuste!
FATOR_CO2_EVITADO_POR_KG_RESIDUO = 2.5 # Exemplo: kg de CO2 evitados por kg de res√≠duo pl√°stico reciclado. Pesquise este valor para o(s) tipo(s) de pl√°stico que voc√™s usam!
FATOR_ENERGIA_ECONOMIZADA_POR_KG_RESIDUO = 5.0 # Exemplo: kWh economizados por kg de res√≠duo pl√°stico reciclado. Pesquise este valor!
CUSTO_ECHOFIO_POR_KG = 100.0 # Exemplo: Pre√ßo de venda (ou custo de produ√ß√£o, dependendo do que quer comparar) do filamento ECHOFIO por kg. Ajuste!
CUSTO_VIRGEM_POR_KG = 150.0 # Exemplo: Pre√ßo m√©dio de mercado de um filamento virgem similar por kg. Pesquise e ajuste!

# --- L√≥gica do C√°lculo e Exibi√ß√£o dos Resultados ---
if calcular_button and quantidade_input > 0:
    st.markdown("---")
    st.subheader("Resultados Calculados")

    quantidade_residuo_kg = 0.0
    quantidade_filamento_kg = 0.0

    # Determina as quantidades de res√≠duo e filamento com base no input
    if tipo_input == 'kg de Res√≠duo Pl√°stico':
        quantidade_residuo_kg = quantidade_input
        # Garante que a taxa de convers√£o n√£o √© zero para evitar erro
        if TAXA_CONVERSAO_RESIDUO_FILAMENTO > 0:
            quantidade_filamento_kg = quantidade_input * TAXA_CONVERSAO_RESIDUO_FILAMENTO
        else:
             st.error("Erro: A taxa de convers√£o de res√≠duo para filamento deve ser maior que zero.")
             quantidade_filamento_kg = 0
             quantidade_residuo_kg = 0 # Zera tudo se a taxa for inv√°lida

    else: # 'kg de Filamento ECHOFIO Produzido'
        quantidade_filamento_kg = quantidade_input
        # Garante que a taxa de convers√£o n√£o √© zero para evitar erro
        if TAXA_CONVERSAO_RESIDUO_FILAMENTO > 0:
            quantidade_residuo_kg = quantidade_input / TAXA_CONVERSAO_RESIDUO_FILAMENTO
        else:
             st.error("Erro: A taxa de convers√£o de res√≠duo para filamento deve ser maior que zero.")
             quantidade_filamento_kg = 0
             quantidade_residuo_kg = 0 # Zera tudo se a taxa for inv√°lida


    # Exibe a quantidade de res√≠duo desviado (diretamente do c√°lculo acima)
    st.metric(
        label="üóëÔ∏è Res√≠duo Pl√°stico Desviado",
        value=f"{quantidade_residuo_kg:,.2f} kg".replace(',', '.'), # Formata√ß√£o e substitui√ß√£o para usar ponto como separador decimal
        help="Quantidade de res√≠duo pl√°stico que deixou de ir para aterros ou o meio ambiente."
    )

    # Exibe a quantidade de filamento produzida/equivalente
    st.metric(
        label="Quantidade de Filamento ECHOFIO",
        value=f"{quantidade_filamento_kg:,.2f} kg".replace(',', '.'), # Formata√ß√£o e substitui√ß√£o para usar ponto como separador decimal
        help=f"Quantidade estimada de filamento ECHOFIO produzida a partir de {quantidade_residuo_kg:,.2f} kg de res√≠duo (considerando taxa de convers√£o de {TAXA_CONVERSAO_RESIDUO_FILAMENTO*100:.1f}%)."
    )


    # --- Estimativa de Impacto Ambiental Evitado ---
    st.subheader("Impacto Ambiental Evitado (Estimativa)")
    # Certifica-se que os fatores est√£o definidos antes de calcular e exibir
    if FATOR_CO2_EVITADO_POR_KG_RESIDUO is not None and FATOR_ENERGIA_ECONOMIZADA_POR_KG_RESIDUO is not None:
        reducao_co2_estimada = quantidade_residuo_kg * FATOR_CO2_EVITADO_POR_KG_RESIDUO
        economia_energia_estimada = quantidade_residuo_kg * FATOR_ENERGIA_ECONOMIZADA_POR_KG_RESIDUO

        st.metric(
            label="üí® Redu√ß√£o Estimada de CO2",
            value=f"{reducao_co2_estimada:,.2f} kg CO2".replace(',', '.'),
            help=f"Estimativa de emiss√µes de CO2 evitadas pela reciclagem em compara√ß√£o com a produ√ß√£o de material virgem (baseado em {FATOR_CO2_EVITADO_POR_KG_RESIDUO:,.2f} kg CO2/kg res√≠duo)."
        )

        st.metric(
             label="üí° Economia Estimada de Energia",
             value=f"{economia_energia_estimada:,.2f} kWh".replace(',', '.'),
             help=f"Estimativa de energia economizada pela reciclagem em compara√ß√£o com a produ√ß√£o de material virgem (baseado em {FATOR_ENERGIA_ECONOMIZADA_POR_KG_RESIDUO:,.2f} kWh/kg res√≠duo)."
         )
    else:
        st.info("Fatores de impacto ambiental (CO2, Energia) n√£o configurados. Entre em contato com os administradores.")


    # --- Estimativa de Economia Financeira ---
    st.subheader("Economia Financeira Estimada")
    # Certifica-se que os custos est√£o definidos e o custo virgem √© maior para a economia ser positiva
    if CUSTO_ECHOFIO_POR_KG is not None and CUSTO_VIRGEM_POR_KG is not None:
        if CUSTO_VIRGEM_POR_KG > CUSTO_ECHOFIO_POR_KG:
            economia_financeira_estimada = quantidade_filamento_kg * (CUSTO_VIRGEM_POR_KG - CUSTO_ECHOFIO_POR_KG)
            st.metric(
                label="üí∞ Economia Financeira Estimada",
                value=f"R$ {economia_financeira_estimada:,.2f}".replace(',', '.'),
                help=f"Estimativa de economia ao utilizar {quantidade_filamento_kg:,.2f} kg de filamento ECHOFIO em vez de filamento virgem (custo ECHOFIO: R${CUSTO_ECHOFIO_POR_KG:,.2f}/kg, custo virgem: R${CUSTO_VIRGEM_POR_KG:,.2f}/kg)."
            )
        elif CUSTO_VIRGEM_POR_KG <= CUSTO_ECHOFIO_POR_KG and quantidade_input > 0:
             st.info("Neste exemplo, o custo do filamento ECHOFIO n√£o √© menor que o custo do filamento virgem para gerar economia financeira positiva.")
        else:
             st.info("Dados de custo do filamento n√£o definidos ou configurados incorretamente para calcular a economia financeira.")


    st.markdown("---")
    st.info("""
        **Nota Importante:**
        Os valores apresentados s√£o **estimativas** baseadas em dados de refer√™ncia e pesquisa.
        A taxa de convers√£o de res√≠duo para filamento e os fatores de impacto ambiental/economia podem variar
        dependendo do tipo espec√≠fico de pl√°stico, do processo de reciclagem e das condi√ß√µes de mercado.
        Consulte a equipe do Projeto ECHOFIO para dados mais precisos e detalhes sobre a metodologia de c√°lculo.
    """)


elif calcular_button and quantidade_input == 0:
     st.warning("Por favor, insira uma quantidade maior que zero para realizar o c√°lculo.")

# --- Rodap√© da p√°gina (Opcional, para consist√™ncia) ---
# st.markdown("---")
# st.write("Projeto ECHOFIO - Inova√ß√£o Sustent√°vel") # Exemplo de rodap√©


# --- Sidebar (Atualizar a descri√ß√£o do projeto e incluir logo) ---
with st.sidebar:
     # Adicionar o logo na sidebar tamb√©m (opcional, mas comum)
     # Use o mesmo tratamento de caminho da logo do cabe√ßalho principal
     if os.path.exists(LOGO_PATH_RELATIVE):
         st.image(LOGO_PATH_RELATIVE, width=80)
     elif os.path.exists(LOGO_PATH_ROOT):
          st.image(LOGO_PATH_ROOT, width=80)
     else:
          st.header("‚ôªÔ∏è") # √çcone de fallback


     st.markdown("---") # Separador visual

     st.header("üå± Sobre o Projeto ECHOFIO") # Nome do projeto atualizado
     st.info(
         "O Projeto ECHOFIO transforma res√≠duos pl√°sticos descartados em filamentos "
         "sustent√°veis de alta qualidade para impress√£o 3D. Nosso objetivo √© promover a "
         "economia circular, reduzir o impacto ambiental e oferecer uma alternativa "
         "inovadora e de baixo custo no mercado de manufatura aditiva." # Descri√ß√£o atualizada, sem men√ß√£o a IA
     )
     st.markdown("---")
     st.write("Desenvolvido por Equipe ECHOFIO") # Cr√©ditos